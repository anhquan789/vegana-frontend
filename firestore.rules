rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Course-related rules
    match /courses/{courseId} {
      // Anyone can read courses
      allow read: if true;
      // Only admin and instructors can create/update courses
      allow create, update: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'instructor']);
      // Only admin can delete courses
      allow delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Course enrollments
    match /enrollments/{enrollmentId} {
      // Users can read their own enrollments
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      // Users can create their own enrollments
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Only admin and instructors can update/delete enrollments
      allow update, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'instructor'];
    }
    
    // Course progress
    match /progress/{progressId} {
      // Users can read/write their own progress
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Default deny for other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
